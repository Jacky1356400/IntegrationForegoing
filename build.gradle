import net.minecraftforge.gradle.common.task.SignJar             
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

version = "${mc_version}-${mod_version}"
group = 'jackyy.integrationforegoing'
archivesBaseName = 'IntegrationForegoing'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: "${mappings_channel}", version: "${mappings_version}"
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            if (project.hasProperty('mcUUID')) {
                args '--uuid', project.getProperty('mcUUID')
            }
            if (project.hasProperty('mcUsername')) {
                args '--username', project.getProperty('mcUsername')
            }
            if (project.hasProperty('mcAccessToken')) {
                args '--accessToken', project.getProperty('mcAccessToken')
            }
            mods {
                integrationforegoing {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                integrationforegoing {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'integrationforegoing', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                integrationforegoing {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
  maven {
    name "JEI & TCon Maven"
    url "http://dvs1.progwml6.com/files/maven"
  }
  maven {
    name "HWYLA Maven"
    url "https://maven.tehnut.info"
  }
  maven {
    name "CraftTweaker Maven"
    url "https://maven.blamejared.com"
  }
  maven {
    name "Curse Maven"
    url "https://www.cursemaven.com"
    content {
        includeGroup "curse.maven"
    }
  }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    runtimeOnly fg.deobf("mezz.jei:jei-1.16.5:+")
    runtimeOnly fg.deobf("mcp.mobius.waila:Hwyla:1.10.11-B78_1.16.2")
    runtimeOnly fg.deobf("curse.maven:theoneprobe-245211:3319255") //1.16-3.1.4
    
    implementation fg.deobf("curse.maven:gunpowderlib-356646:3198017") //1.16.5-1.2.2
    implementation fg.deobf("curse.maven:titanium-287342:3346366") //1.16.5-3.2.8.4-10
    implementation fg.deobf("curse.maven:industrialforegoing-266515:3346370") //1.16.5-3.2.13.1-5
    implementation fg.deobf("com.blamejared.crafttweaker:CraftTweaker-1.16.5:7.+")
    implementation fg.deobf("slimeknights.tconstruct:TConstruct:1.16.5-3.+")
    implementation fg.deobf("slimeknights.mantle:Mantle:1.16.5-1.+")
    implementation fg.deobf("curse.maven:immersiveengineering-231951:3326143") //1.16.5-5.0.0-135
}

jar {
    manifest {
        attributes([
            "Specification-Title": "IntegrationForegoing",
            "Specification-Version": "${project.mc_version}-${project.mod_version}",
            "Specification-Vendor": "Jackyy",
            "Implementation-Title": "IntegrationForegoing",
            "Implementation-Version": "${project.mc_version}-${project.mod_version}",
            "Implementation-Vendor" :"Jackyy",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar') 

task signJar(type: SignJar, dependsOn: jar) {
  onlyIf {
    project.hasProperty('keyStore')
  }
  keyStore = project.findProperty('keyStore')
  alias = project.findProperty('keyStoreAlias')
  storePass = project.findProperty('keyStorePass')
  keyPass = project.findProperty('keyStoreKeyPass')
  inputFile = jar.archivePath
  outputFile = jar.archivePath
}

build.dependsOn signJar

task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
  classifier = 'sources'
}

task deobfJar(type: Jar) {
  from sourceSets.main.output
  classifier = 'deobf'
}

artifacts {
  archives sourcesJar
  archives deobfJar
}

